When would you want to use a remote repository rather than keeping all your work local?
# When I want to share my work to the public or have a online backup of all my work.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
# Sometimes you want to change things locally first and then push the commit. Allowing one logical change per commit.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
# Forks are for when you want to work on something other people are sharing on GitHub.
# Clones are for when you want to copy a repository locally and from remote.
# Branches are for when you want to modify existing commit in a radical way.

What is the benefit of having a copy of the last known state of the remote stored locally?
# So you can work at the most updated version of the code and have a local backup.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
# I would use it so that everyone can commit parts of the code simulateneously.
# The learning curve might make it harder at first, but it'll be more productive in the long run.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
# When the new code can potentially break the master. Having a separate branch allows a safe risk taking environment.